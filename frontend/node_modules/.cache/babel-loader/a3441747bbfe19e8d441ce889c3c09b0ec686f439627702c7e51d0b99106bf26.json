{"ast":null,"code":"import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\nimport jwt_decode from \"jwt-decode\"; // для извлечения данных из токена\n\n// реализуем регистрацию авторизацию и проверку токена на валидность\nexport const registration = async (name, email, password_hash) => {\n  // админ на время\n  const {\n    data\n  } = await $host.post(\"api/user/registration\", {\n    name,\n    email,\n    password_hash,\n    role: \"admin\"\n  }); // получаем токен на бэке\n  // { name, email, password_hash, role }\n  return jwt_decode(data);\n  //return data;\n};\nexport const login = async (email, password_hash) => {\n  const response = await $host.post(\"api/user/login\", {\n    email,\n    password_hash\n  });\n  return response;\n};\nexport const check_auth = async () => {\n  const response = await $host.post(\"api/user/auth\");\n  return response;\n};\n// router.post(\"/registration\", userController.registration);\n// router.post(\"/login\", userController.login);\n// router.get(\"/auth\", authMiddleware, userController.check_auth);\n// router.get(\"/\", checkRole(\"admin\"), userController.getAll);\n// router.delete(\"/\", authMiddleware, userController.delete);","map":{"version":3,"names":["$authHost","$host","jwt_decode","registration","name","email","password_hash","data","post","role","login","response","check_auth"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\r\nimport jwt_decode from \"jwt-decode\"; // для извлечения данных из токена\r\n\r\n// реализуем регистрацию авторизацию и проверку токена на валидность\r\nexport const registration = async (name, email, password_hash) => {\r\n  // админ на время\r\n  const { data } = await $host.post(\"api/user/registration\", { name, email, password_hash, role: \"admin\" }); // получаем токен на бэке\r\n  // { name, email, password_hash, role }\r\n  return jwt_decode(data);\r\n  //return data;\r\n};\r\n\r\nexport const login = async (email, password_hash) => {\r\n  const response = await $host.post(\"api/user/login\", { email, password_hash });\r\n  return response;\r\n};\r\n\r\nexport const check_auth = async () => {\r\n  const response = await $host.post(\"api/user/auth\");\r\n  return response;\r\n};\r\n// router.post(\"/registration\", userController.registration);\r\n// router.post(\"/login\", userController.login);\r\n// router.get(\"/auth\", authMiddleware, userController.check_auth);\r\n// router.get(\"/\", checkRole(\"admin\"), userController.getAll);\r\n// router.delete(\"/\", authMiddleware, userController.delete);\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS,CAAC,CAAC;AAC5C,OAAOC,UAAU,MAAM,YAAY,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,aAAa,KAAK;EAChE;EACA,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,uBAAuB,EAAE;IAAEJ,IAAI;IAAEC,KAAK;IAAEC,aAAa;IAAEG,IAAI,EAAE;EAAQ,CAAC,CAAC,CAAC,CAAC;EAC3G;EACA,OAAOP,UAAU,CAACK,IAAI,CAAC;EACvB;AACF,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAAEC,aAAa,KAAK;EACnD,MAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACO,IAAI,CAAC,gBAAgB,EAAE;IAAEH,KAAK;IAAEC;EAAc,CAAC,CAAC;EAC7E,OAAOK,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMD,QAAQ,GAAG,MAAMV,KAAK,CAACO,IAAI,CAAC,eAAe,CAAC;EAClD,OAAOG,QAAQ;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}