{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\components\\\\modals\\\\CreateCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Form, Button, Modal, Dropdown } from \"react-bootstrap\";\nimport { createCat, getCategory } from \"../../http/product_categoryAPI\";\nimport { Context } from \"../../index\";\n\n// пропсы 1-ый видно или нет. 2ая функция скрывает модальное окно\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateCategory = ({\n  show,\n  onHide\n}) => {\n  _s();\n  const {\n    product\n  } = useContext(Context); // Подключаем контекст для получения категорий\n\n  const [name, setName] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null); // Локальное состояние для выбранной категории\n\n  // Получаем категории при монтировании компонента\n  useEffect(() => {\n    getCategory().then(data => product.setCategory(data)); // Загружаем категории в контекст\n  }, [product]);\n  const addCategory = () => {\n    // Проверка перед отправкой: если значение пустое, ничего не отправлять\n    if (!name.trim()) {\n      return alert(\"Название категории не может быть пустым!\");\n    }\n    createCat({\n      category_name: name\n    }).then(data => {\n      setName(\"\"); // Очистить поле ввода\n      onHide(); // Закрыть модалку\n    }); // обновляем input если все гуд\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"lg\",\n    centered: true,\n    onHide: onHide,\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Введите название категории\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), product.category && product.category.length > 0 && /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            children: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.category_name) || \"Выберите категорию\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: product.category.map(categ => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setSelectedCategory(categ),\n              children: categ.category_name\n            }, categ.category_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: addCategory,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateCategory, \"Xfgf4f6eViD8ilnCG6j8ZcqTL4w=\");\n_c = CreateCategory;\nexport default CreateCategory;\nvar _c;\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Form","Button","Modal","Dropdown","createCat","getCategory","Context","jsxDEV","_jsxDEV","CreateCategory","show","onHide","_s","product","name","setName","selectedCategory","setSelectedCategory","then","data","setCategory","addCategory","trim","alert","category_name","size","centered","children","Header","closeButton","Title","id","fileName","_jsxFileName","lineNumber","columnNumber","Body","Control","placeholder","value","onChange","e","target","category","length","className","Toggle","Menu","map","categ","Item","onClick","category_id","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/modals/CreateCategory.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Button, Modal, Dropdown } from \"react-bootstrap\";\r\nimport { createCat, getCategory } from \"../../http/product_categoryAPI\";\r\nimport { Context } from \"../../index\";\r\n\r\n// пропсы 1-ый видно или нет. 2ая функция скрывает модальное окно\r\nconst CreateCategory = ({ show, onHide }) => {\r\n  const { product } = useContext(Context); // Подключаем контекст для получения категорий\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(null); // Локальное состояние для выбранной категории\r\n\r\n  // Получаем категории при монтировании компонента\r\n  useEffect(() => {\r\n    getCategory().then((data) => product.setCategory(data)); // Загружаем категории в контекст\r\n  }, [product]);\r\n\r\n  const addCategory = () => {\r\n    // Проверка перед отправкой: если значение пустое, ничего не отправлять\r\n    if (!name.trim()) {\r\n      return alert(\"Название категории не может быть пустым!\");\r\n    }\r\n\r\n    createCat({ category_name: name }).then((data) => {\r\n      setName(\"\"); // Очистить поле ввода\r\n      onHide(); // Закрыть модалку\r\n    }); // обновляем input если все гуд\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"lg\" centered onHide={onHide} show={show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Добавить категорию</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          {/* Форма для ввода новой категории */}\r\n          <Form.Control\r\n            placeholder={\"Введите название категории\"}\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n\r\n          {/* Если категории уже загружены, показываем выпадающий список */}\r\n          {product.category && product.category.length > 0 && (\r\n            <Dropdown className=\"mt-3\">\r\n              <Dropdown.Toggle>{selectedCategory?.category_name || \"Выберите категорию\"}</Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                {product.category.map((categ) => (\r\n                  <Dropdown.Item key={categ.category_id} onClick={() => setSelectedCategory(categ)}>\r\n                    {categ.category_name}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          )}\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-success\" onClick={addCategory}>\r\n          Добавить\r\n        </Button>\r\n        <Button variant=\"outline-danger\" onClick={onHide}>\r\n          Закрыть\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateCategory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}