{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\pages\\\\cart.js\",\n  _s = $RefreshSig$();\n// import React, { useContext } from \"react\";\n// import { Container, Row, Col, Card, Button, Image, ListGroup } from \"react-bootstrap\";\n// import { Context } from \"../index\";\n\n// const Cart = () => {\n//   const { cart } = useContext(Context);\n//   const { product } = useContext(Context);\n\n//   const totalPrice = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n//   return (\n//     <Container className=\"mt-4\">\n//       <h2 className=\"text-center mb-4\">Товары пользователя</h2>\n\n//       <Row className=\"justify-content-center\">\n//         {cartItems.map((item) => (\n//           <Col key={item.id} md={4} className=\"d-flex mb-4\">\n//             <Card className=\"w-100 border-secondary\">\n//               <Image\n//                 src={item.image}\n//                 alt={item.name}\n//                 style={{ width: \"100%\", height: 200, borderRadius: 10 }}\n//                 className=\"p-2\"\n//               />\n//               <Card.Body className=\"d-flex flex-column\">\n//                 <Card.Title className=\"mb-1\">{item.name}</Card.Title>\n//                 <Card.Text className=\"flex-grow-1\">\n//                   <strong>Описание:</strong> {item.description}\n//                   <br />\n//                   <strong>Цена:</strong> {item.price} ₽\n//                   <br />\n//                   <strong>В наличии:</strong> {item.stock} шт.\n//                 </Card.Text>\n\n//                 <div className=\"d-flex align-items-center justify-content-center my-2\">\n//                   <Button variant=\"outline-danger\" size=\"sm\" className=\"me-2\">\n//                     -\n//                   </Button>\n//                   <span>{item.quantity}</span>\n//                   <Button variant=\"outline-success\" size=\"sm\" className=\"ms-2\">\n//                     +\n//                   </Button>\n//                 </div>\n//               </Card.Body>\n//             </Card>\n//           </Col>\n//         ))}\n//       </Row>\n\n//       <Card className=\"p-4 mt-4 text-center\">\n//         <h4>Итого: {totalPrice} ₽</h4>\n//         <div className=\"mt-3 d-flex justify-content-center gap-3\">\n//           <Button variant=\"outline-danger\">Очистить корзину</Button>\n//           <Button variant=\"success\">Создать заказ</Button>\n//         </div>\n//       </Card>\n//     </Container>\n//   );\n// };\n\n// export default Cart;\nimport React, { useContext } from \"react\";\nimport { Container, Row, Col, Card, Image } from \"react-bootstrap\";\nimport { Context } from \"../index\"; // Контекст для доступа к хранилищу\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const {\n    cartStore,\n    productStore\n  } = useContext(Context); // Используем MobX для получения данных о корзине и продуктах\n\n  // Получаем список товаров из корзины\n  const cartItems = cartStore.cartItems;\n  const products = productStore.product; // Получаем список продуктов из контекста\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: cartItems.map(item => {\n        // Находим продукт по product_id\n        const product = products.find(prod => prod.id === item.product_id);\n        if (!product) return null; // Если продукт не найден, не отображаем его\n\n        return /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"d-flex mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"w-100 border-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: process.env.REACT_APP_API_URL + product.image // Путь к изображению товара\n              ,\n              alt: product.name // Название товара для alt текста\n              ,\n              style: {\n                width: \"100%\",\n                height: 200,\n                objectFit: \"contain\",\n                borderRadius: 10\n              },\n              className: \"p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"mb-1\",\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"flex-grow-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), \" \", product.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u0426\\u0435\\u043D\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), \" \", product.price, \" \\u20BD \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), \" \", item.quantity, \" \\u0448\\u0442. \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"39AFUvg3Kdmu2blzkO/OywU1fr0=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","Container","Row","Col","Card","Image","Context","jsxDEV","_jsxDEV","Cart","_s","cartStore","productStore","cartItems","products","product","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","find","prod","id","product_id","md","src","process","env","REACT_APP_API_URL","image","alt","name","style","width","height","objectFit","borderRadius","Body","Title","Text","description","price","quantity","_c","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/pages/cart.js"],"sourcesContent":["// import React, { useContext } from \"react\";\r\n// import { Container, Row, Col, Card, Button, Image, ListGroup } from \"react-bootstrap\";\r\n// import { Context } from \"../index\";\r\n\r\n// const Cart = () => {\r\n//   const { cart } = useContext(Context);\r\n//   const { product } = useContext(Context);\r\n\r\n//   const totalPrice = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n//   return (\r\n//     <Container className=\"mt-4\">\r\n//       <h2 className=\"text-center mb-4\">Товары пользователя</h2>\r\n\r\n//       <Row className=\"justify-content-center\">\r\n//         {cartItems.map((item) => (\r\n//           <Col key={item.id} md={4} className=\"d-flex mb-4\">\r\n//             <Card className=\"w-100 border-secondary\">\r\n//               <Image\r\n//                 src={item.image}\r\n//                 alt={item.name}\r\n//                 style={{ width: \"100%\", height: 200, borderRadius: 10 }}\r\n//                 className=\"p-2\"\r\n//               />\r\n//               <Card.Body className=\"d-flex flex-column\">\r\n//                 <Card.Title className=\"mb-1\">{item.name}</Card.Title>\r\n//                 <Card.Text className=\"flex-grow-1\">\r\n//                   <strong>Описание:</strong> {item.description}\r\n//                   <br />\r\n//                   <strong>Цена:</strong> {item.price} ₽\r\n//                   <br />\r\n//                   <strong>В наличии:</strong> {item.stock} шт.\r\n//                 </Card.Text>\r\n\r\n//                 <div className=\"d-flex align-items-center justify-content-center my-2\">\r\n//                   <Button variant=\"outline-danger\" size=\"sm\" className=\"me-2\">\r\n//                     -\r\n//                   </Button>\r\n//                   <span>{item.quantity}</span>\r\n//                   <Button variant=\"outline-success\" size=\"sm\" className=\"ms-2\">\r\n//                     +\r\n//                   </Button>\r\n//                 </div>\r\n//               </Card.Body>\r\n//             </Card>\r\n//           </Col>\r\n//         ))}\r\n//       </Row>\r\n\r\n//       <Card className=\"p-4 mt-4 text-center\">\r\n//         <h4>Итого: {totalPrice} ₽</h4>\r\n//         <div className=\"mt-3 d-flex justify-content-center gap-3\">\r\n//           <Button variant=\"outline-danger\">Очистить корзину</Button>\r\n//           <Button variant=\"success\">Создать заказ</Button>\r\n//         </div>\r\n//       </Card>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\nimport React, { useContext } from \"react\";\r\nimport { Container, Row, Col, Card, Image } from \"react-bootstrap\";\r\nimport { Context } from \"../index\"; // Контекст для доступа к хранилищу\r\n\r\nconst Cart = () => {\r\n  const { cartStore, productStore } = useContext(Context); // Используем MobX для получения данных о корзине и продуктах\r\n\r\n  // Получаем список товаров из корзины\r\n  const cartItems = cartStore.cartItems;\r\n  const products = productStore.product; // Получаем список продуктов из контекста\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"text-center mb-4\">Товары в корзине</h2>\r\n\r\n      <Row className=\"justify-content-center\">\r\n        {cartItems.map((item) => {\r\n          // Находим продукт по product_id\r\n          const product = products.find((prod) => prod.id === item.product_id);\r\n\r\n          if (!product) return null; // Если продукт не найден, не отображаем его\r\n\r\n          return (\r\n            <Col key={item.id} md={4} className=\"d-flex mb-4\">\r\n              <Card className=\"w-100 border-secondary\">\r\n                <Image\r\n                  src={process.env.REACT_APP_API_URL + product.image} // Путь к изображению товара\r\n                  alt={product.name} // Название товара для alt текста\r\n                  style={{ width: \"100%\", height: 200, objectFit: \"contain\", borderRadius: 10 }}\r\n                  className=\"p-2\"\r\n                />\r\n                <Card.Body className=\"d-flex flex-column\">\r\n                  <Card.Title className=\"mb-1\">{product.name}</Card.Title> {/* Название товара */}\r\n                  <Card.Text className=\"flex-grow-1\">\r\n                    <strong>Описание:</strong> {product.description} {/* Описание товара */}\r\n                    <br />\r\n                    <strong>Цена:</strong> {product.price} ₽ {/* Цена товара */}\r\n                    <br />\r\n                    <strong>Количество:</strong> {item.quantity} шт. {/* Количество товара в корзине */}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}