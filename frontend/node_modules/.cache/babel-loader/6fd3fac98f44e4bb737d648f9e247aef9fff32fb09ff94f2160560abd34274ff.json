{"ast":null,"code":"import { $authHost } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\n\n//\nexport const addItem = async ({\n  product_id,\n  quantity = 1\n}) => {\n  const {\n    data\n  } = await $authHost.post(\"api/cartitem\", {\n    product_id,\n    quantity\n  });\n  return data;\n};\nexport const decreaseItem = async cart_item_id => {\n  const {\n    data\n  } = await $authHost.patch(`api/cartitem/${cart_item_id}`);\n  return data;\n};\nexport const removeItem = async cart_item_id => {\n  const {\n    data\n  } = await $authHost.delete(`api/cartitem${cart_item_id}`);\n  return data;\n};\n\n//+\nexport const getCart = async () => {\n  const {\n    data\n  } = await $authHost.get(\"api/cart\");\n  return data;\n};\nexport const deleteCart = async () => {\n  const {\n    data\n  } = await $authHost.delete(\"api/cart\");\n  return data;\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// router.post(\"/\", authMiddleware, cartItemController.add);\n// router.patch(\"/:cart_item_id\", authMiddleware, cartItemController.decrease);\n// router.delete(\"/:cart_item_id\", authMiddleware, cartItemController.remove);\n\n// router.get(\"/\", authMiddleware, cartController.getCart);\n// router.delete(\"/\", authMiddleware, cartController.clearCart);\n\n// const CartItem = sequelize.define(\"CartItem\", {\n//   id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\n//   cart_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: Cart, key: \"id\" } },\n//   product_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: Product, key: \"id\" } },\n//   quantity: { type: DataTypes.INTEGER, allowNull: false },\n// });\n\n// const Cart = sequelize.define(\"Cart\", {\n//   id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\n//   user_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: User, key: \"id\" } },\n//   created_at: { type: DataTypes.DATE, allowNull: false, defaultValue: DataTypes.NOW },\n// });","map":{"version":3,"names":["$authHost","addItem","product_id","quantity","data","post","decreaseItem","cart_item_id","patch","removeItem","delete","getCart","get","deleteCart"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/http/cart_cartItemAPI.js"],"sourcesContent":["import { $authHost } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\r\n\r\n//\r\nexport const addItem = async ({ product_id, quantity = 1 }) => {\r\n  const { data } = await $authHost.post(\"api/cartitem\", { product_id, quantity });\r\n  return data;\r\n};\r\n\r\nexport const decreaseItem = async (cart_item_id) => {\r\n  const { data } = await $authHost.patch(`api/cartitem/${cart_item_id}`);\r\n  return data;\r\n};\r\n\r\nexport const removeItem = async (cart_item_id) => {\r\n  const { data } = await $authHost.delete(`api/cartitem${cart_item_id}`);\r\n  return data;\r\n};\r\n\r\n//+\r\nexport const getCart = async () => {\r\n  const { data } = await $authHost.get(\"api/cart\");\r\n  return data;\r\n};\r\n\r\nexport const deleteCart = async () => {\r\n  const { data } = await $authHost.delete(\"api/cart\");\r\n  return data;\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// router.post(\"/\", authMiddleware, cartItemController.add);\r\n// router.patch(\"/:cart_item_id\", authMiddleware, cartItemController.decrease);\r\n// router.delete(\"/:cart_item_id\", authMiddleware, cartItemController.remove);\r\n\r\n// router.get(\"/\", authMiddleware, cartController.getCart);\r\n// router.delete(\"/\", authMiddleware, cartController.clearCart);\r\n\r\n// const CartItem = sequelize.define(\"CartItem\", {\r\n//   id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n//   cart_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: Cart, key: \"id\" } },\r\n//   product_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: Product, key: \"id\" } },\r\n//   quantity: { type: DataTypes.INTEGER, allowNull: false },\r\n// });\r\n\r\n// const Cart = sequelize.define(\"Cart\", {\r\n//   id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },\r\n//   user_id: { type: DataTypes.INTEGER, allowNull: false, references: { model: User, key: \"id\" } },\r\n//   created_at: { type: DataTypes.DATE, allowNull: false, defaultValue: DataTypes.NOW },\r\n// });\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,SAAS,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAO;EAAEC,UAAU;EAAEC,QAAQ,GAAG;AAAE,CAAC,KAAK;EAC7D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,cAAc,EAAE;IAAEH,UAAU;IAAEC;EAAS,CAAC,CAAC;EAC/E,OAAOC,IAAI;AACb,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,YAAY,IAAK;EAClD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACQ,KAAK,CAAC,gBAAgBD,YAAY,EAAE,CAAC;EACtE,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOF,YAAY,IAAK;EAChD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACU,MAAM,CAAC,eAAeH,YAAY,EAAE,CAAC;EACtE,OAAOH,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAM;IAAEP;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACY,GAAG,CAAC,UAAU,CAAC;EAChD,OAAOR,IAAI;AACb,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAM;IAAET;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACU,MAAM,CAAC,UAAU,CAAC;EACnD,OAAON,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}