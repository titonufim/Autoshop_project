{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\components\\\\CategoryBar.js\",\n  _s = $RefreshSig$();\n// Category.js\nimport React, { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context);\n\n  // Если категории ещё не загружены, просто ничего не рендерим\n  if (!Array.isArray(product.category)) return null;\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\"\n      },\n      active: product.selectedCategory === null,\n      onClick: () => product.setSelectedCategory(null),\n      children: \"\\u0412\\u0441\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), product.category.map(type => {\n      var _product$selectedCate;\n      const isActive = ((_product$selectedCate = product.selectedCategory) === null || _product$selectedCate === void 0 ? void 0 : _product$selectedCate.category_id) === type.category_id;\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        style: {\n          cursor: \"pointer\"\n        },\n        active: isActive,\n        onClick: () => product.setSelectedCategory(type),\n        children: type.category_name\n      }, type.category_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}, \"AOBnIXpSIvpxOtBmrhq+WNRGtzY=\")), \"AOBnIXpSIvpxOtBmrhq+WNRGtzY=\");\n_c2 = Category;\nexport default Category;\nvar _c, _c2;\n$RefreshReg$(_c, \"Category$observer\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"names":["React","useContext","observer","Context","ListGroup","jsxDEV","_jsxDEV","Category","_s","_c","product","Array","isArray","category","children","Item","style","cursor","active","selectedCategory","onClick","setSelectedCategory","fileName","_jsxFileName","lineNumber","columnNumber","map","type","_product$selectedCate","isActive","category_id","category_name","_c2","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/CategoryBar.js"],"sourcesContent":["// Category.js\r\nimport React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst Category = observer(() => {\r\n  const { product } = useContext(Context);\r\n\r\n  // Если категории ещё не загружены, просто ничего не рендерим\r\n  if (!Array.isArray(product.category)) return null;\r\n\r\n  return (\r\n    <ListGroup>\r\n      {/* Пункт \"Все категории\" */}\r\n      <ListGroup.Item\r\n        style={{ cursor: \"pointer\" }}\r\n        active={product.selectedCategory === null}\r\n        onClick={() => product.setSelectedCategory(null)}>\r\n        Все категории\r\n      </ListGroup.Item>\r\n\r\n      {product.category.map((type) => {\r\n        const isActive = product.selectedCategory?.category_id === type.category_id;\r\n        return (\r\n          <ListGroup.Item\r\n            key={type.category_id}\r\n            style={{ cursor: \"pointer\" }}\r\n            active={isActive}\r\n            onClick={() => product.setSelectedCategory(type)}>\r\n            {type.category_name}\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nexport default Category;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAAC,EAAA,CAAGN,QAAQ,CAAAO,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC9B,MAAM;IAAEE;EAAQ,CAAC,GAAGT,UAAU,CAACE,OAAO,CAAC;;EAEvC;EACA,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACF,OAAO,CAACG,QAAQ,CAAC,EAAE,OAAO,IAAI;EAEjD,oBACEP,OAAA,CAACF,SAAS;IAAAU,QAAA,gBAERR,OAAA,CAACF,SAAS,CAACW,IAAI;MACbC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC7BC,MAAM,EAAER,OAAO,CAACS,gBAAgB,KAAK,IAAK;MAC1CC,OAAO,EAAEA,CAAA,KAAMV,OAAO,CAACW,mBAAmB,CAAC,IAAI,CAAE;MAAAP,QAAA,EAAC;IAEpD;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,EAEhBf,OAAO,CAACG,QAAQ,CAACa,GAAG,CAAEC,IAAI,IAAK;MAAA,IAAAC,qBAAA;MAC9B,MAAMC,QAAQ,GAAG,EAAAD,qBAAA,GAAAlB,OAAO,CAACS,gBAAgB,cAAAS,qBAAA,uBAAxBA,qBAAA,CAA0BE,WAAW,MAAKH,IAAI,CAACG,WAAW;MAC3E,oBACExB,OAAA,CAACF,SAAS,CAACW,IAAI;QAEbC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7BC,MAAM,EAAEW,QAAS;QACjBT,OAAO,EAAEA,CAAA,KAAMV,OAAO,CAACW,mBAAmB,CAACM,IAAI,CAAE;QAAAb,QAAA,EAChDa,IAAI,CAACI;MAAa,GAJdJ,IAAI,CAACG,WAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CAAC;IAErB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC,kCAAC;AAACO,GAAA,GA9BGzB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}