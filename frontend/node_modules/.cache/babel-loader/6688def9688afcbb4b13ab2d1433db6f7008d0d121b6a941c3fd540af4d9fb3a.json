{"ast":null,"code":"import axios from \"axios\";\n// создание axios инстансов\n// Создаем инстансы?\n\n//для неавторизованного\nconst $host = axios.create({\n  // укажем URL\n  baseURL: process.env.REACT_APP_API_URL\n});\n\n// для авторизованного\n// здесь автоматически подставляется хэдер Authorization и добавляетсся токен\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\n// интерцептор - принимающая параметром config\n// токен получаем из локального хранилища, по ключу 'token' (он сохраняется влокальное хранилище при авторизации)\nconst authInteceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"token\")}`;\n  return config;\n};\n\n// добавляем интерцептор к $authHost отрабатывает перед каждым request и подставляет токен в хедер Authorization\n$authHost.interceptors.request.use(authInteceptor);\nexport { $host, $authHost };","map":{"version":3,"names":["axios","$host","create","baseURL","process","env","REACT_APP_API_URL","$authHost","authInteceptor","config","headers","authorization","localStorage","getItem","interceptors","request","use"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/http/index.js"],"sourcesContent":["import axios from \"axios\";\r\n// создание axios инстансов\r\n// Создаем инстансы?\r\n\r\n//для неавторизованного\r\nconst $host = axios.create({\r\n  // укажем URL\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\n// для авторизованного\r\n// здесь автоматически подставляется хэдер Authorization и добавляетсся токен\r\nconst $authHost = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\n// интерцептор - принимающая параметром config\r\n// токен получаем из локального хранилища, по ключу 'token' (он сохраняется влокальное хранилище при авторизации)\r\nconst authInteceptor = (config) => {\r\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n  return config;\r\n};\r\n\r\n// добавляем интерцептор к $authHost отрабатывает перед каждым request и подставляет токен в хедер Authorization\r\n$authHost.interceptors.request.use(authInteceptor);\r\n\r\nexport { $host, $authHost };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzB;EACAC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;;AAEF;AACA;AACA,MAAMC,SAAS,GAAGP,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;;AAEF;AACA;AACA,MAAME,cAAc,GAAIC,MAAM,IAAK;EACjCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;EACxE,OAAOJ,MAAM;AACf,CAAC;;AAED;AACAF,SAAS,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC;AAElD,SAASP,KAAK,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}