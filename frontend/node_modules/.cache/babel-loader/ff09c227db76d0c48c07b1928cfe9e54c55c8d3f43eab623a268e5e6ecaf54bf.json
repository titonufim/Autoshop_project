{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class OrderStore {\n  constructor() {\n    this._orders = []; // Один заказ\n    this._orderItems = []; // Список товаров в заказе\n    this._users = []; // Список пользователей\n    makeAutoObservable(this);\n  }\n  setOrders(orders) {\n    this._orders = orders.map(order => ({\n      id: order.id,\n      user_id: order.user_id,\n      total_price: order.total_price,\n      status: order.status\n    }));\n  }\n  setOrderItems(items) {\n    this._orderItems = items.map(item => ({\n      id: item.id,\n      order_id: item.order_id,\n      product_id: item.product_id,\n      quantity: item.quantity\n    }));\n  }\n  updateOrderStatus(orderId, newStatus) {\n    const orderIndex = this._orders.findIndex(order => order.id === orderId);\n    if (orderIndex !== -1) {\n      const updatedOrders = [...this._orders];\n      updatedOrders[orderIndex] = {\n        ...updatedOrders[orderIndex],\n        status: newStatus\n      };\n      this._orders = updatedOrders;\n    }\n  }\n  setUsers(orders) {\n    // Вытаскиваем уникальных пользователей из заказов\n    const usersMap = {};\n    orders.forEach(order => {\n      if (order.User && !usersMap[order.User.id]) {\n        usersMap[order.User.id] = order.User;\n      }\n    });\n    this._users = Object.values(usersMap);\n  }\n  getUserById(userId) {\n    return this._users.find(user => user.id === userId) || null;\n  }\n  clearOrder() {\n    this._orders = [];\n    this._orderItems = [];\n  }\n  get order() {\n    return this._orders;\n  }\n  get orderItems() {\n    return this._orderItems;\n  }\n  getOrderItemsByOrderId(orderId) {\n    return this._orderItems.filter(item => item.order_id === orderId);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","OrderStore","constructor","_orders","_orderItems","_users","setOrders","orders","map","order","id","user_id","total_price","status","setOrderItems","items","item","order_id","product_id","quantity","updateOrderStatus","orderId","newStatus","orderIndex","findIndex","updatedOrders","setUsers","usersMap","forEach","User","Object","values","getUserById","userId","find","user","clearOrder","orderItems","getOrderItemsByOrderId","filter"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/store/OrderStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class OrderStore {\r\n  constructor() {\r\n    this._orders = []; // Один заказ\r\n    this._orderItems = []; // Список товаров в заказе\r\n    this._users = []; // Список пользователей\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setOrders(orders) {\r\n    this._orders = orders.map((order) => ({\r\n      id: order.id,\r\n      user_id: order.user_id,\r\n      total_price: order.total_price,\r\n      status: order.status,\r\n    }));\r\n  }\r\n\r\n  setOrderItems(items) {\r\n    this._orderItems = items.map((item) => ({\r\n      id: item.id,\r\n      order_id: item.order_id,\r\n      product_id: item.product_id,\r\n      quantity: item.quantity,\r\n    }));\r\n  }\r\n\r\n  updateOrderStatus(orderId, newStatus) {\r\n    const orderIndex = this._orders.findIndex((order) => order.id === orderId);\r\n    if (orderIndex !== -1) {\r\n      const updatedOrders = [...this._orders];\r\n      updatedOrders[orderIndex] = {\r\n        ...updatedOrders[orderIndex],\r\n        status: newStatus,\r\n      };\r\n      this._orders = updatedOrders;\r\n    }\r\n  }\r\n\r\n  setUsers(orders) {\r\n    // Вытаскиваем уникальных пользователей из заказов\r\n    const usersMap = {};\r\n    orders.forEach((order) => {\r\n      if (order.User && !usersMap[order.User.id]) {\r\n        usersMap[order.User.id] = order.User;\r\n      }\r\n    });\r\n    this._users = Object.values(usersMap);\r\n  }\r\n\r\n  getUserById(userId) {\r\n    return this._users.find((user) => user.id === userId) || null;\r\n  }\r\n\r\n  clearOrder() {\r\n    this._orders = [];\r\n    this._orderItems = [];\r\n  }\r\n\r\n  get order() {\r\n    return this._orders;\r\n  }\r\n\r\n  get orderItems() {\r\n    return this._orderItems;\r\n  }\r\n\r\n  getOrderItemsByOrderId(orderId) {\r\n    return this._orderItems.filter((item) => item.order_id === orderId);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,eAAe,MAAMC,UAAU,CAAC;EAC9BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,EAAE,CAAC,CAAC;IACnB,IAAI,CAACC,WAAW,GAAG,EAAE,CAAC,CAAC;IACvB,IAAI,CAACC,MAAM,GAAG,EAAE,CAAC,CAAC;IAClBL,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEAM,SAASA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACJ,OAAO,GAAGI,MAAM,CAACC,GAAG,CAAEC,KAAK,KAAM;MACpCC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZC,OAAO,EAAEF,KAAK,CAACE,OAAO;MACtBC,WAAW,EAAEH,KAAK,CAACG,WAAW;MAC9BC,MAAM,EAAEJ,KAAK,CAACI;IAChB,CAAC,CAAC,CAAC;EACL;EAEAC,aAAaA,CAACC,KAAK,EAAE;IACnB,IAAI,CAACX,WAAW,GAAGW,KAAK,CAACP,GAAG,CAAEQ,IAAI,KAAM;MACtCN,EAAE,EAAEM,IAAI,CAACN,EAAE;MACXO,QAAQ,EAAED,IAAI,CAACC,QAAQ;MACvBC,UAAU,EAAEF,IAAI,CAACE,UAAU;MAC3BC,QAAQ,EAAEH,IAAI,CAACG;IACjB,CAAC,CAAC,CAAC;EACL;EAEAC,iBAAiBA,CAACC,OAAO,EAAEC,SAAS,EAAE;IACpC,MAAMC,UAAU,GAAG,IAAI,CAACpB,OAAO,CAACqB,SAAS,CAAEf,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKW,OAAO,CAAC;IAC1E,IAAIE,UAAU,KAAK,CAAC,CAAC,EAAE;MACrB,MAAME,aAAa,GAAG,CAAC,GAAG,IAAI,CAACtB,OAAO,CAAC;MACvCsB,aAAa,CAACF,UAAU,CAAC,GAAG;QAC1B,GAAGE,aAAa,CAACF,UAAU,CAAC;QAC5BV,MAAM,EAAES;MACV,CAAC;MACD,IAAI,CAACnB,OAAO,GAAGsB,aAAa;IAC9B;EACF;EAEAC,QAAQA,CAACnB,MAAM,EAAE;IACf;IACA,MAAMoB,QAAQ,GAAG,CAAC,CAAC;IACnBpB,MAAM,CAACqB,OAAO,CAAEnB,KAAK,IAAK;MACxB,IAAIA,KAAK,CAACoB,IAAI,IAAI,CAACF,QAAQ,CAAClB,KAAK,CAACoB,IAAI,CAACnB,EAAE,CAAC,EAAE;QAC1CiB,QAAQ,CAAClB,KAAK,CAACoB,IAAI,CAACnB,EAAE,CAAC,GAAGD,KAAK,CAACoB,IAAI;MACtC;IACF,CAAC,CAAC;IACF,IAAI,CAACxB,MAAM,GAAGyB,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAAC;EACvC;EAEAK,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAO,IAAI,CAAC5B,MAAM,CAAC6B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACzB,EAAE,KAAKuB,MAAM,CAAC,IAAI,IAAI;EAC/D;EAEAG,UAAUA,CAAA,EAAG;IACX,IAAI,CAACjC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EAEA,IAAIK,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACN,OAAO;EACrB;EAEA,IAAIkC,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACjC,WAAW;EACzB;EAEAkC,sBAAsBA,CAACjB,OAAO,EAAE;IAC9B,OAAO,IAAI,CAACjB,WAAW,CAACmC,MAAM,CAAEvB,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKI,OAAO,CAAC;EACrE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}