{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class ProductStore {\n  constructor() {\n    this._category = [];\n    this._product = []; // Продукты будут загружаться с сервера\n    this._selectedCategory = null;\n    this._currentPage = 1;\n    this._limit = 6;\n    makeAutoObservable(this);\n  }\n\n  // Экшены - функции изменяющие состояние\n  setCategory(category) {\n    this._category = category;\n  }\n  setProduct(products) {\n    this._product = products;\n  }\n  setSelectedCategory(type) {\n    this._selectedCategory = type;\n    this.setPage(1); // сбрасываем на первую страницу при смене категории\n  }\n  setPage(page) {\n    this._currentPage = page;\n  }\n\n  // Для получения переменных из состояния\n  get category() {\n    return this._category;\n  }\n  get product() {\n    return this._product;\n  }\n  get selectedCategory() {\n    return this._selectedCategory;\n  }\n  get currentPage() {\n    return this._currentPage;\n  }\n  get filteredProducts() {\n    const hasCategory = this._selectedCategory && this._selectedCategory.category_id;\n    const filtered = hasCategory ? this._product.filter(prod => prod.category_id === this._selectedCategory.category_id) : this._product;\n    const start = (this._currentPage - 1) * this._limit;\n    const end = start + this._limit;\n    return filtered.slice(start, end);\n  }\n  get totalPages() {\n    const hasCategory = this._selectedCategory && this._selectedCategory.category_id;\n    const filteredLength = hasCategory ? this._product.filter(prod => prod.category_id === this._selectedCategory.category_id).length : this._product.length;\n    return Math.ceil(filteredLength / this._limit);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","ProductStore","constructor","_category","_product","_selectedCategory","_currentPage","_limit","setCategory","category","setProduct","products","setSelectedCategory","type","setPage","page","product","selectedCategory","currentPage","filteredProducts","hasCategory","category_id","filtered","filter","prod","start","end","slice","totalPages","filteredLength","length","Math","ceil"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/store/ProductStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class ProductStore {\r\n  constructor() {\r\n    this._category = [];\r\n    this._product = []; // Продукты будут загружаться с сервера\r\n    this._selectedCategory = null;\r\n    this._currentPage = 1;\r\n    this._limit = 6;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  // Экшены - функции изменяющие состояние\r\n  setCategory(category) {\r\n    this._category = category;\r\n  }\r\n\r\n  setProduct(products) {\r\n    this._product = products;\r\n  }\r\n\r\n  setSelectedCategory(type) {\r\n    this._selectedCategory = type;\r\n    this.setPage(1); // сбрасываем на первую страницу при смене категории\r\n  }\r\n\r\n  setPage(page) {\r\n    this._currentPage = page;\r\n  }\r\n\r\n  // Для получения переменных из состояния\r\n  get category() {\r\n    return this._category;\r\n  }\r\n\r\n  get product() {\r\n    return this._product;\r\n  }\r\n\r\n  get selectedCategory() {\r\n    return this._selectedCategory;\r\n  }\r\n\r\n  get currentPage() {\r\n    return this._currentPage;\r\n  }\r\n\r\n  get filteredProducts() {\r\n    const hasCategory = this._selectedCategory && this._selectedCategory.category_id;\r\n\r\n    const filtered = hasCategory\r\n      ? this._product.filter((prod) => prod.category_id === this._selectedCategory.category_id)\r\n      : this._product;\r\n\r\n    const start = (this._currentPage - 1) * this._limit;\r\n    const end = start + this._limit;\r\n\r\n    return filtered.slice(start, end);\r\n  }\r\n\r\n  get totalPages() {\r\n    const hasCategory = this._selectedCategory && this._selectedCategory.category_id;\r\n\r\n    const filteredLength = hasCategory\r\n      ? this._product.filter((prod) => prod.category_id === this._selectedCategory.category_id).length\r\n      : this._product.length;\r\n\r\n    return Math.ceil(filteredLength / this._limit);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,eAAe,MAAMC,YAAY,CAAC;EAChCC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACpB,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,MAAM,GAAG,CAAC;IACfP,kBAAkB,CAAC,IAAI,CAAC;EAC1B;;EAEA;EACAQ,WAAWA,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACN,SAAS,GAAGM,QAAQ;EAC3B;EAEAC,UAAUA,CAACC,QAAQ,EAAE;IACnB,IAAI,CAACP,QAAQ,GAAGO,QAAQ;EAC1B;EAEAC,mBAAmBA,CAACC,IAAI,EAAE;IACxB,IAAI,CAACR,iBAAiB,GAAGQ,IAAI;IAC7B,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB;EAEAA,OAAOA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACT,YAAY,GAAGS,IAAI;EAC1B;;EAEA;EACA,IAAIN,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACN,SAAS;EACvB;EAEA,IAAIa,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACZ,QAAQ;EACtB;EAEA,IAAIa,gBAAgBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACZ,iBAAiB;EAC/B;EAEA,IAAIa,WAAWA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACZ,YAAY;EAC1B;EAEA,IAAIa,gBAAgBA,CAAA,EAAG;IACrB,MAAMC,WAAW,GAAG,IAAI,CAACf,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACgB,WAAW;IAEhF,MAAMC,QAAQ,GAAGF,WAAW,GACxB,IAAI,CAAChB,QAAQ,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,WAAW,KAAK,IAAI,CAAChB,iBAAiB,CAACgB,WAAW,CAAC,GACvF,IAAI,CAACjB,QAAQ;IAEjB,MAAMqB,KAAK,GAAG,CAAC,IAAI,CAACnB,YAAY,GAAG,CAAC,IAAI,IAAI,CAACC,MAAM;IACnD,MAAMmB,GAAG,GAAGD,KAAK,GAAG,IAAI,CAAClB,MAAM;IAE/B,OAAOe,QAAQ,CAACK,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;EACnC;EAEA,IAAIE,UAAUA,CAAA,EAAG;IACf,MAAMR,WAAW,GAAG,IAAI,CAACf,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACgB,WAAW;IAEhF,MAAMQ,cAAc,GAAGT,WAAW,GAC9B,IAAI,CAAChB,QAAQ,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,WAAW,KAAK,IAAI,CAAChB,iBAAiB,CAACgB,WAAW,CAAC,CAACS,MAAM,GAC9F,IAAI,CAAC1B,QAAQ,CAAC0B,MAAM;IAExB,OAAOC,IAAI,CAACC,IAAI,CAACH,cAAc,GAAG,IAAI,CAACtB,MAAM,CAAC;EAChD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}