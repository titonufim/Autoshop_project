{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\components\\\\CategoryBar.js\",\n  _s = $RefreshSig$();\n// CategoryBar.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { getCategory } from \"../http/product_categoryAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context);\n  useEffect(() => {\n    // Загрузка категорий с сервера\n    if (product.categories.length === 0) {\n      getCategory().then(data => {\n        // Добавляем категорию \"Все товары\"\n        product.setCategory([{\n          category_id: null,\n          name: \"Все товары\"\n        }, ...data]);\n      });\n    }\n  }, [product]);\n  const handleCategorySelect = category => {\n    // При выборе категории, обновляем selectedCategory\n    product.setSelectedCategory(category);\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: product.categories.map(category => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      onClick: () => handleCategorySelect(category),\n      active: product.selectedCategory.category_id === category.category_id,\n      children: category.name\n    }, category.category_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"U+6+jBXBSX/f91oFy4GeshL31ps=\")), \"U+6+jBXBSX/f91oFy4GeshL31ps=\");\n_c2 = CategoryBar;\nexport default CategoryBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategoryBar$observer\");\n$RefreshReg$(_c2, \"CategoryBar\");","map":{"version":3,"names":["React","useEffect","useState","ListGroup","useContext","Context","observer","getCategory","jsxDEV","_jsxDEV","CategoryBar","_s","_c","product","categories","length","then","data","setCategory","category_id","name","handleCategorySelect","category","setSelectedCategory","children","map","Item","onClick","active","selectedCategory","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/CategoryBar.js"],"sourcesContent":["// CategoryBar.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { getCategory } from \"../http/product_categoryAPI\";\r\n\r\nconst CategoryBar = observer(() => {\r\n  const { product } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    // Загрузка категорий с сервера\r\n    if (product.categories.length === 0) {\r\n      getCategory().then((data) => {\r\n        // Добавляем категорию \"Все товары\"\r\n        product.setCategory([{ category_id: null, name: \"Все товары\" }, ...data]);\r\n      });\r\n    }\r\n  }, [product]);\r\n\r\n  const handleCategorySelect = (category) => {\r\n    // При выборе категории, обновляем selectedCategory\r\n    product.setSelectedCategory(category);\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {product.categories.map((category) => (\r\n        <ListGroup.Item\r\n          key={category.category_id}\r\n          onClick={() => handleCategorySelect(category)}\r\n          active={product.selectedCategory.category_id === category.category_id}>\r\n          {category.name}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nexport default CategoryBar;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,WAAW,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACjC,MAAM;IAAEE;EAAQ,CAAC,GAAGT,UAAU,CAACC,OAAO,CAAC;EAEvCJ,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,OAAO,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MACnCR,WAAW,CAAC,CAAC,CAACS,IAAI,CAAEC,IAAI,IAAK;QAC3B;QACAJ,OAAO,CAACK,WAAW,CAAC,CAAC;UAAEC,WAAW,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAa,CAAC,EAAE,GAAGH,IAAI,CAAC,CAAC;MAC3E,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMQ,oBAAoB,GAAIC,QAAQ,IAAK;IACzC;IACAT,OAAO,CAACU,mBAAmB,CAACD,QAAQ,CAAC;EACvC,CAAC;EAED,oBACEb,OAAA,CAACN,SAAS;IAAAqB,QAAA,EACPX,OAAO,CAACC,UAAU,CAACW,GAAG,CAAEH,QAAQ,iBAC/Bb,OAAA,CAACN,SAAS,CAACuB,IAAI;MAEbC,OAAO,EAAEA,CAAA,KAAMN,oBAAoB,CAACC,QAAQ,CAAE;MAC9CM,MAAM,EAAEf,OAAO,CAACgB,gBAAgB,CAACV,WAAW,KAAKG,QAAQ,CAACH,WAAY;MAAAK,QAAA,EACrEF,QAAQ,CAACF;IAAI,GAHTE,QAAQ,CAACH,WAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC,kCAAC;AAACC,GAAA,GA9BGxB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAE,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}