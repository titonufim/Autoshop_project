{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Modal, Button, Card, Alert, Badge } from \"react-bootstrap\";\n\n// const UserOrdersModal = ({ show, onHide, userOrders }) => {\n//   const [statusMessage, setStatusMessage] = useState(\"\");\n//   const [updatedOrders, setUpdatedOrders] = useState(userOrders || []);\n\n//   const updateStatus = (userId, orderId, newStatus) => {\n//     const updated = updatedOrders.map((user) => {\n//       if (user.id === userId) {\n//         return {\n//           ...user,\n//           orders: user.orders.map((order) => (order.id === orderId ? { ...order, status: newStatus } : order)),\n//         };\n//       }\n//       return user;\n//     });\n\n//     setUpdatedOrders(updated);\n//     setStatusMessage(`Статус заказа №${orderId} обновлён на \"${newStatus}\"`);\n//     setTimeout(() => setStatusMessage(\"\"), 3000);\n//   };\n\n//   return (\n//     <Modal show={show} onHide={onHide} size=\"lg\" centered scrollable>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Информация о заказах пользователей</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         {statusMessage && <Alert variant=\"success\">{statusMessage}</Alert>}\n//         {updatedOrders.map((user) => (\n//           <Card className=\"mb-4\" key={user.id}>\n//             <Card.Header>\n//               <strong>{user.name}</strong> — <em>{user.email}</em>\n//             </Card.Header>\n//             <Card.Body>\n//               {user.orders.map((order) => (\n//                 <Card className=\"mb-3\" key={order.id}>\n//                   <Card.Body>\n//                     <div className=\"d-flex justify-content-between align-items-center\">\n//                       <div>\n//                         <div>Заказ №{order.id}</div>\n//                         <div>\n//                           Сумма: <strong>{order.total}₽</strong>\n//                         </div>\n//                         <div>\n//                           Текущий статус:{\" \"}\n//                           <Badge bg=\"info\" text=\"dark\">\n//                             {order.status}\n//                           </Badge>\n//                         </div>\n//                       </div>\n//                       <div className=\"d-flex flex-column gap-2\">\n//                         <Button variant=\"outline-warning\" onClick={() => updateStatus(user.id, order.id, \"pending\")}>\n//                           Pending\n//                         </Button>\n//                         <Button variant=\"outline-primary\" onClick={() => updateStatus(user.id, order.id, \"shipped\")}>\n//                           Shipped\n//                         </Button>\n//                         <Button variant=\"outline-success\" onClick={() => updateStatus(user.id, order.id, \"delivered\")}>\n//                           Delivered\n//                         </Button>\n//                       </div>\n//                     </div>\n//                   </Card.Body>\n//                 </Card>\n//               ))}\n//             </Card.Body>\n//           </Card>\n//         ))}\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={onHide}>\n//           Закрыть\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// };\n\n// export default UserOrdersModal;","map":{"version":3,"names":[],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/modals/CheckUserOrders.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Modal, Button, Card, Alert, Badge } from \"react-bootstrap\";\r\n\r\n// const UserOrdersModal = ({ show, onHide, userOrders }) => {\r\n//   const [statusMessage, setStatusMessage] = useState(\"\");\r\n//   const [updatedOrders, setUpdatedOrders] = useState(userOrders || []);\r\n\r\n//   const updateStatus = (userId, orderId, newStatus) => {\r\n//     const updated = updatedOrders.map((user) => {\r\n//       if (user.id === userId) {\r\n//         return {\r\n//           ...user,\r\n//           orders: user.orders.map((order) => (order.id === orderId ? { ...order, status: newStatus } : order)),\r\n//         };\r\n//       }\r\n//       return user;\r\n//     });\r\n\r\n//     setUpdatedOrders(updated);\r\n//     setStatusMessage(`Статус заказа №${orderId} обновлён на \"${newStatus}\"`);\r\n//     setTimeout(() => setStatusMessage(\"\"), 3000);\r\n//   };\r\n\r\n//   return (\r\n//     <Modal show={show} onHide={onHide} size=\"lg\" centered scrollable>\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title>Информация о заказах пользователей</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         {statusMessage && <Alert variant=\"success\">{statusMessage}</Alert>}\r\n//         {updatedOrders.map((user) => (\r\n//           <Card className=\"mb-4\" key={user.id}>\r\n//             <Card.Header>\r\n//               <strong>{user.name}</strong> — <em>{user.email}</em>\r\n//             </Card.Header>\r\n//             <Card.Body>\r\n//               {user.orders.map((order) => (\r\n//                 <Card className=\"mb-3\" key={order.id}>\r\n//                   <Card.Body>\r\n//                     <div className=\"d-flex justify-content-between align-items-center\">\r\n//                       <div>\r\n//                         <div>Заказ №{order.id}</div>\r\n//                         <div>\r\n//                           Сумма: <strong>{order.total}₽</strong>\r\n//                         </div>\r\n//                         <div>\r\n//                           Текущий статус:{\" \"}\r\n//                           <Badge bg=\"info\" text=\"dark\">\r\n//                             {order.status}\r\n//                           </Badge>\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"d-flex flex-column gap-2\">\r\n//                         <Button variant=\"outline-warning\" onClick={() => updateStatus(user.id, order.id, \"pending\")}>\r\n//                           Pending\r\n//                         </Button>\r\n//                         <Button variant=\"outline-primary\" onClick={() => updateStatus(user.id, order.id, \"shipped\")}>\r\n//                           Shipped\r\n//                         </Button>\r\n//                         <Button variant=\"outline-success\" onClick={() => updateStatus(user.id, order.id, \"delivered\")}>\r\n//                           Delivered\r\n//                         </Button>\r\n//                       </div>\r\n//                     </div>\r\n//                   </Card.Body>\r\n//                 </Card>\r\n//               ))}\r\n//             </Card.Body>\r\n//           </Card>\r\n//         ))}\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"secondary\" onClick={onHide}>\r\n//           Закрыть\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\n// export default UserOrdersModal;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}