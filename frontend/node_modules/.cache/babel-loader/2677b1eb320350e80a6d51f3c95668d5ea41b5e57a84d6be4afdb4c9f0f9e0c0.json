{"ast":null,"code":"import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\n//import { jwtDecode } from \"jwt-decode\"; // для извлечения данных из токена\n\n// реализуем регистрацию авторизацию и проверку токена на валидность\nexport const createProduct = async () => {\n  //   // админ на время\n  //   const { data } = await $host.post(\"api/user/registration\", { name, email, password_hash, role: \"admin\" }); // получаем токен на бэке\n  //   // { name, email, password_hash, role }\n  //   localStorage.setItem(\"token\", data.token); // в локальное хранилище по ключу токен помещаем токен\n  //   return jwtDecode(data.token);\n  //   //return data;\n};\nexport const getAllProduct = async () => {\n  //   const { data } = await $host.post(\"api/user/login\", { email, password_hash });\n  //   localStorage.setItem(\"token\", data.token);\n  //   return jwtDecode(data.token);\n};\n\n// ДОПИЛИТЬ!!!!\nexport const updateProduct = async () => {\n  //   const { data } = await $authHost.get(\"api/user/auth\");\n  //   localStorage.setItem(\"token\", data.token);\n  //   return jwtDecode(data.token);\n};\nexport const deleteProduct = async () => {\n  //   const { data } = await $authHost.delete(\"api/user/\");\n  //   return data; // Возвращаем результат\n};\nexport const createCategory = async category => {\n  const {\n    data\n  } = await $authHost.post(\"api/category\", {\n    category\n  }); // получаем токен на бэке\n  return data;\n  //return data;\n};\nexport const getCategory = async () => {\n  const {\n    data\n  } = await $host.get(\"api/category\"); // получаем токен на бэке\n\n  return data;\n  //return data;\n};\n\n// router.post(\"/\", checkRole(\"admin\"), ProductController.create);\n// router.get(\"/\", ProductController.getAll);\n// router.get(\"/:id\", ProductController.getOne);\n// router.put(\"/:id\", checkRole(\"admin\"), ProductController.update);\n// router.delete(\"/:id\", checkRole(\"admin\"), ProductController.delete);\n\n// router.post(\"/\", checkRole(\"admin\"), CategoryController.create);\n// router.get(\"/\", CategoryController.getAll);\n// router.get(\"/:id\", CategoryController.getOne);\n// router.put(\"/:id\", checkRole(\"admin\"), CategoryController.update);\n// router.delete(\"/:id\", checkRole(\"admin\"), CategoryController.delete);","map":{"version":3,"names":["$authHost","$host","createProduct","getAllProduct","updateProduct","deleteProduct","createCategory","category","data","post","getCategory","get"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/http/productAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\r\n//import { jwtDecode } from \"jwt-decode\"; // для извлечения данных из токена\r\n\r\n// реализуем регистрацию авторизацию и проверку токена на валидность\r\nexport const createProduct = async () => {\r\n  //   // админ на время\r\n  //   const { data } = await $host.post(\"api/user/registration\", { name, email, password_hash, role: \"admin\" }); // получаем токен на бэке\r\n  //   // { name, email, password_hash, role }\r\n  //   localStorage.setItem(\"token\", data.token); // в локальное хранилище по ключу токен помещаем токен\r\n  //   return jwtDecode(data.token);\r\n  //   //return data;\r\n};\r\n\r\nexport const getAllProduct = async () => {\r\n  //   const { data } = await $host.post(\"api/user/login\", { email, password_hash });\r\n  //   localStorage.setItem(\"token\", data.token);\r\n  //   return jwtDecode(data.token);\r\n};\r\n\r\n// ДОПИЛИТЬ!!!!\r\nexport const updateProduct = async () => {\r\n  //   const { data } = await $authHost.get(\"api/user/auth\");\r\n  //   localStorage.setItem(\"token\", data.token);\r\n  //   return jwtDecode(data.token);\r\n};\r\n\r\nexport const deleteProduct = async () => {\r\n  //   const { data } = await $authHost.delete(\"api/user/\");\r\n  //   return data; // Возвращаем результат\r\n};\r\n\r\nexport const createCategory = async (category) => {\r\n  const { data } = await $authHost.post(\"api/category\", { category }); // получаем токен на бэке\r\n  return data;\r\n  //return data;\r\n};\r\n\r\nexport const getCategory = async () => {\r\n  const { data } = await $host.get(\"api/category\"); // получаем токен на бэке\r\n\r\n  return data;\r\n  //return data;\r\n};\r\n\r\n// router.post(\"/\", checkRole(\"admin\"), ProductController.create);\r\n// router.get(\"/\", ProductController.getAll);\r\n// router.get(\"/:id\", ProductController.getOne);\r\n// router.put(\"/:id\", checkRole(\"admin\"), ProductController.update);\r\n// router.delete(\"/:id\", checkRole(\"admin\"), ProductController.delete);\r\n\r\n// router.post(\"/\", checkRole(\"admin\"), CategoryController.create);\r\n// router.get(\"/\", CategoryController.getAll);\r\n// router.get(\"/:id\", CategoryController.getOne);\r\n// router.put(\"/:id\", checkRole(\"admin\"), CategoryController.update);\r\n// router.delete(\"/:id\", checkRole(\"admin\"), CategoryController.delete);\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS,CAAC,CAAC;AAC5C;;AAEA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC;EACA;EACA;AAAA,CACD;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC;EACA;EACA;AAAA,CACD;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC;EACA;AAAA,CACD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMR,SAAS,CAACS,IAAI,CAAC,cAAc,EAAE;IAAEF;EAAS,CAAC,CAAC,CAAC,CAAC;EACrE,OAAOC,IAAI;EACX;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAAEF;EAAK,CAAC,GAAG,MAAMP,KAAK,CAACU,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;;EAElD,OAAOH,IAAI;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}