{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\components\\\\CategoryBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context); // получаем из index это для работы с mobx, для работы с состояниями\n  // active - пропс\n  // onClick слушатель события\n  // style {cursor: 'pointer'} для изменения стиля курсора\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: product.category.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\"\n      },\n      active: type.id === product.selectedType.id,\n      onClick: () => product.setSelectedType(type),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}, \"AOBnIXpSIvpxOtBmrhq+WNRGtzY=\")), \"AOBnIXpSIvpxOtBmrhq+WNRGtzY=\");\n_c2 = Category;\nexport default Category;\n\n// import React, {useContext} from 'react';\n// import {observer} from \"mobx-react-lite\";\n// import {Context} from \"../index\";\n// import Col from \"react-bootstrap/Col\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n\n// const TypeBar = observer(() => {\n//     const {device} = useContext(Context)\n//     return (\n//         <ListGroup>\n//             {device.types.map(type =>\n//                 <ListGroup.Item\n//                     style={{cursor: 'pointer'}}\n//                     active={type.id === device.selectedType.id}\n//                     onClick={() => device.setSelectedType(type)}\n//                     key={type.id}\n//                 >\n//                     {type.name}\n//                 </ListGroup.Item>\n//             )}\n//         </ListGroup>\n//     );\n// });\n\n// export default TypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Category$observer\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"names":["React","useContext","observer","Context","ListGroup","jsxDEV","_jsxDEV","Category","_s","_c","product","children","category","map","type","Item","style","cursor","active","id","selectedType","onClick","setSelectedType","name","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/CategoryBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst Category = observer(() => {\r\n  const { product } = useContext(Context); // получаем из index это для работы с mobx, для работы с состояниями\r\n  // active - пропс\r\n  // onClick слушатель события\r\n  // style {cursor: 'pointer'} для изменения стиля курсора\r\n  return (\r\n    <ListGroup>\r\n      {product.category.map((type) => (\r\n        <ListGroup.Item\r\n          style={{ cursor: \"pointer\" }}\r\n          active={type.id === product.selectedType.id}\r\n          onClick={() => product.setSelectedType(type)}\r\n          key={type.id}>\r\n          {type.name}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nexport default Category;\r\n\r\n// import React, {useContext} from 'react';\r\n// import {observer} from \"mobx-react-lite\";\r\n// import {Context} from \"../index\";\r\n// import Col from \"react-bootstrap/Col\";\r\n// import ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\n// const TypeBar = observer(() => {\r\n//     const {device} = useContext(Context)\r\n//     return (\r\n//         <ListGroup>\r\n//             {device.types.map(type =>\r\n//                 <ListGroup.Item\r\n//                     style={{cursor: 'pointer'}}\r\n//                     active={type.id === device.selectedType.id}\r\n//                     onClick={() => device.setSelectedType(type)}\r\n//                     key={type.id}\r\n//                 >\r\n//                     {type.name}\r\n//                 </ListGroup.Item>\r\n//             )}\r\n//         </ListGroup>\r\n//     );\r\n// });\r\n\r\n// export default TypeBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAAC,EAAA,CAAGN,QAAQ,CAAAO,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC9B,MAAM;IAAEE;EAAQ,CAAC,GAAGT,UAAU,CAACE,OAAO,CAAC,CAAC,CAAC;EACzC;EACA;EACA;EACA,oBACEG,OAAA,CAACF,SAAS;IAAAO,QAAA,EACPD,OAAO,CAACE,QAAQ,CAACC,GAAG,CAAEC,IAAI,iBACzBR,OAAA,CAACF,SAAS,CAACW,IAAI;MACbC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC7BC,MAAM,EAAEJ,IAAI,CAACK,EAAE,KAAKT,OAAO,CAACU,YAAY,CAACD,EAAG;MAC5CE,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACY,eAAe,CAACR,IAAI,CAAE;MAAAH,QAAA,EAE5CG,IAAI,CAACS;IAAI,GADLT,IAAI,CAACK,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC,kCAAC;AAACC,GAAA,GAlBGrB,QAAQ;AAoBd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAE,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}