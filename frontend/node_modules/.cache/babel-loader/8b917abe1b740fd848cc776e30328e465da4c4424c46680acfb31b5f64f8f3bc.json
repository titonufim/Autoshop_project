{"ast":null,"code":"import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\n\n// +\nexport const createProd = async product => {\n  const {\n    data\n  } = await $authHost.post(\"api/product\", product);\n  return data;\n};\n\n//+\nexport const getAllProduct = async () => {\n  const {\n    data\n  } = await $host.get(\"api/product\");\n  return data.rows; // возвращаем сразу массив товаров, поскольку на бэке есть count, который нужен будет для пагинации\n};\n\n// +\nexport const updateProd = async (id, product) => {\n  const {\n    data\n  } = await $authHost.put(`api/product/${id}`, product);\n  return data;\n};\n\n// +\nexport const deleteProd = async id => {\n  const {\n    data\n  } = await $authHost.delete(`api/product/${id}`);\n  return data;\n};\n\n// +\nexport const createCat = async category => {\n  const {\n    data\n  } = await $authHost.post(\"api/category\", category);\n  return data;\n};\n\n//+\nexport const getCategory = async (categoryId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get(\"api/category\", {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\n\n// router.post(\"/\", checkRole(\"admin\"), ProductController.create);\n// router.get(\"/\", ProductController.getAll);\n// router.get(\"/:id\", ProductController.getOne);\n// router.put(\"/:id\", checkRole(\"admin\"), ProductController.update);\n// router.delete(\"/:id\", checkRole(\"admin\"), ProductController.delete);\n\n// router.post(\"/\", checkRole(\"admin\"), CategoryController.create);\n// router.get(\"/\", CategoryController.getAll);\n// router.get(\"/:id\", CategoryController.getOne);\n// router.put(\"/:id\", checkRole(\"admin\"), CategoryController.update);\n// router.delete(\"/:id\", checkRole(\"admin\"), CategoryController.delete);","map":{"version":3,"names":["$authHost","$host","createProd","product","data","post","getAllProduct","get","rows","updateProd","id","put","deleteProd","delete","createCat","category","getCategory","categoryId","page","limit","params","typeId","brandId"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/http/product_categoryAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\"; // импортируем экземпляры Axios для авторизованных и неавторизованных запросов\r\n\r\n// +\r\nexport const createProd = async (product) => {\r\n  const { data } = await $authHost.post(\"api/product\", product);\r\n  return data;\r\n};\r\n\r\n//+\r\nexport const getAllProduct = async () => {\r\n  const { data } = await $host.get(\"api/product\");\r\n  return data.rows; // возвращаем сразу массив товаров, поскольку на бэке есть count, который нужен будет для пагинации\r\n};\r\n\r\n// +\r\nexport const updateProd = async (id, product) => {\r\n  const { data } = await $authHost.put(`api/product/${id}`, product);\r\n  return data;\r\n};\r\n\r\n// +\r\nexport const deleteProd = async (id) => {\r\n  const { data } = await $authHost.delete(`api/product/${id}`);\r\n  return data;\r\n};\r\n\r\n// +\r\nexport const createCat = async (category) => {\r\n  const { data } = await $authHost.post(\"api/category\", category);\r\n  return data;\r\n};\r\n\r\n//+\r\nexport const getCategory = async (categoryId, page, limit = 5) => {\r\n  const { data } = await $host.get(\"api/category\", {\r\n    params: {\r\n      typeId,\r\n      brandId,\r\n      page,\r\n      limit,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// router.post(\"/\", checkRole(\"admin\"), ProductController.create);\r\n// router.get(\"/\", ProductController.getAll);\r\n// router.get(\"/:id\", ProductController.getOne);\r\n// router.put(\"/:id\", checkRole(\"admin\"), ProductController.update);\r\n// router.delete(\"/:id\", checkRole(\"admin\"), ProductController.delete);\r\n\r\n// router.post(\"/\", checkRole(\"admin\"), CategoryController.create);\r\n// router.get(\"/\", CategoryController.getAll);\r\n// router.get(\"/:id\", CategoryController.getOne);\r\n// router.put(\"/:id\", checkRole(\"admin\"), CategoryController.update);\r\n// router.delete(\"/:id\", checkRole(\"admin\"), CategoryController.delete);\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,aAAa,EAAEF,OAAO,CAAC;EAC7D,OAAOC,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAM;IAAEF;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,aAAa,CAAC;EAC/C,OAAOH,IAAI,CAACI,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEP,OAAO,KAAK;EAC/C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACW,GAAG,CAAC,eAAeD,EAAE,EAAE,EAAEP,OAAO,CAAC;EAClE,OAAOC,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACa,MAAM,CAAC,eAAeH,EAAE,EAAE,CAAC;EAC5D,OAAON,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMU,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,MAAM;IAAEX;EAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,cAAc,EAAEU,QAAQ,CAAC;EAC/D,OAAOX,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAOC,UAAU,EAAEC,IAAI,EAAEC,KAAK,GAAG,CAAC,KAAK;EAChE,MAAM;IAAEf;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,cAAc,EAAE;IAC/Ca,MAAM,EAAE;MACNC,MAAM;MACNC,OAAO;MACPJ,IAAI;MACJC;IACF;EACF,CAAC,CAAC;EACF,OAAOf,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}