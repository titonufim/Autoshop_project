{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redmi\\\\Desktop\\\\autoparts-shop\\\\frontend\\\\src\\\\components\\\\CategoryBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { getCategory } from \"../http/product_categoryAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context); // получаем из index это для работы с mobx, для работы с состояниями\n\n  useEffect(() => {\n    // Загрузка категорий с сервера\n    if (product.categories.length === 0) {\n      getCategory().then(data => {\n        // Добавляем категорию \"Все товары\"\n        product.setCategory([{\n          category_id: null,\n          name: \"Все товары\"\n        }, ...data]);\n      });\n    }\n  }, [product]);\n  const handleCategorySelect = category => {\n    // При выборе категории, обновляем selectedCategory\n    product.setSelectedCategory(category);\n  };\n\n  // active - пропс\n  // onClick слушатель события\n  // style {cursor: 'pointer'} для изменения стиля курсора\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: product.category.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: \"pointer\"\n      },\n      active: type.category_id === product.selectedCategory.category_id,\n      onClick: () => product.setSelectedCategory(type),\n      children: type.category_name\n    }, type.category_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"U+6+jBXBSX/f91oFy4GeshL31ps=\")), \"U+6+jBXBSX/f91oFy4GeshL31ps=\");\n_c2 = Category;\nexport default Category;\nvar _c, _c2;\n$RefreshReg$(_c, \"Category$observer\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"names":["React","useContext","useEffect","observer","Context","ListGroup","getCategory","jsxDEV","_jsxDEV","Category","_s","_c","product","categories","length","then","data","setCategory","category_id","name","handleCategorySelect","category","setSelectedCategory","children","map","type","Item","style","cursor","active","selectedCategory","onClick","category_name","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/redmi/Desktop/autoparts-shop/frontend/src/components/CategoryBar.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { getCategory } from \"../http/product_categoryAPI\";\r\n\r\nconst Category = observer(() => {\r\n  const { product } = useContext(Context); // получаем из index это для работы с mobx, для работы с состояниями\r\n\r\n  useEffect(() => {\r\n    // Загрузка категорий с сервера\r\n    if (product.categories.length === 0) {\r\n      getCategory().then((data) => {\r\n        // Добавляем категорию \"Все товары\"\r\n        product.setCategory([{ category_id: null, name: \"Все товары\" }, ...data]);\r\n      });\r\n    }\r\n  }, [product]);\r\n\r\n  const handleCategorySelect = (category) => {\r\n    // При выборе категории, обновляем selectedCategory\r\n    product.setSelectedCategory(category);\r\n  };\r\n\r\n  // active - пропс\r\n  // onClick слушатель события\r\n  // style {cursor: 'pointer'} для изменения стиля курсора\r\n  return (\r\n    <ListGroup>\r\n      {product.category.map((type) => (\r\n        <ListGroup.Item\r\n          style={{ cursor: \"pointer\" }}\r\n          active={type.category_id === product.selectedCategory.category_id}\r\n          onClick={() => product.setSelectedCategory(type)}\r\n          key={type.category_id}>\r\n          {type.category_name}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n});\r\n\r\nexport default Category;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAAC,EAAA,CAAGP,QAAQ,CAAAQ,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC9B,MAAM;IAAEE;EAAQ,CAAC,GAAGX,UAAU,CAACG,OAAO,CAAC,CAAC,CAAC;;EAEzCF,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,OAAO,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MACnCR,WAAW,CAAC,CAAC,CAACS,IAAI,CAAEC,IAAI,IAAK;QAC3B;QACAJ,OAAO,CAACK,WAAW,CAAC,CAAC;UAAEC,WAAW,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAa,CAAC,EAAE,GAAGH,IAAI,CAAC,CAAC;MAC3E,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMQ,oBAAoB,GAAIC,QAAQ,IAAK;IACzC;IACAT,OAAO,CAACU,mBAAmB,CAACD,QAAQ,CAAC;EACvC,CAAC;;EAED;EACA;EACA;EACA,oBACEb,OAAA,CAACH,SAAS;IAAAkB,QAAA,EACPX,OAAO,CAACS,QAAQ,CAACG,GAAG,CAAEC,IAAI,iBACzBjB,OAAA,CAACH,SAAS,CAACqB,IAAI;MACbC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAC7BC,MAAM,EAAEJ,IAAI,CAACP,WAAW,KAAKN,OAAO,CAACkB,gBAAgB,CAACZ,WAAY;MAClEa,OAAO,EAAEA,CAAA,KAAMnB,OAAO,CAACU,mBAAmB,CAACG,IAAI,CAAE;MAAAF,QAAA,EAEhDE,IAAI,CAACO;IAAa,GADdP,IAAI,CAACP,WAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC,kCAAC;AAACC,GAAA,GAlCG5B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}